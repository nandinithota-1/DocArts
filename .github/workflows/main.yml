name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Build and Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'maven'

      - name: Build and Test Backend
        working-directory: ./doc-arts-backend
        run: mvn clean verify

      - name: Check Backend Coverage Threshold
        working-directory: ./doc-arts-backend
        run: mvn jacoco:check

      - name: Upload Backend Coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: ./doc-arts-backend/target/site/jacoco/jacoco.xml
          include-hidden-files: true

  frontend:
    name: Build and Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.8.0'
          cache: 'npm'
          cache-dependency-path: doc-arts-ui/package-lock.json

      - name: Install Dependencies
        working-directory: ./doc-arts-ui
        run: npm ci

      - name: Run Tests with Coverage
        working-directory: ./doc-arts-ui
        run: npm test -- --coverage

      - name: Check Frontend Coverage Threshold
        working-directory: ./doc-arts-ui
        run: |
          npx jest --coverage --coverageThreshold='{
            "global": {
              "branches": 80,
              "functions": 80,
              "lines": 80,
              "statements": 80
            }
          }'

      - name: Upload Frontend Coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: ./doc-arts-ui/coverage/coverage-final.json
          include-hidden-files: true

      - name: Build Frontend
        working-directory: ./doc-arts-ui
        run: npm run build

  coverage:
    name: Combine Coverage Reports
    needs: [backend, frontend]
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          path: coverage-reports
  
      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
  
      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool
  
      - name: Merge coverage reports
        run: |
          reportgenerator \
            -reports:"coverage-reports/**/jacoco.xml;coverage-reports/**/coverage-final.json" \
            -targetdir:"coverage-report" \
            -reporttypes:Html
  
      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: combined-coverage-report
          path: coverage-report
        if: always()
