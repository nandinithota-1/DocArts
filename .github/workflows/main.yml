name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Build and Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'maven'

      - name: Build and Test Backend
        working-directory: ./doc-arts-backend
        run: mvn clean verify org.jacoco:jacoco-maven-plugin:report

      - name: Upload Backend Coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: ./doc-arts-backend/target/site/jacoco/jacoco.xml
          include-hidden-files: true

  frontend:
    name: Build and Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.8.0'
          cache: 'npm'
          cache-dependency-path: doc-arts-ui/package-lock.json

      - name: Install Dependencies
        working-directory: ./doc-arts-ui
        run: npm ci

      - name: Run Tests with Coverage
        working-directory: ./doc-arts-ui
        run: npm test -- --coverage

      - name: Upload Frontend Coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: ./doc-arts-ui/coverage/coverage-final.json
          include-hidden-files: true

      - name: Build Frontend
        working-directory: ./doc-arts-ui
        run: npm run build

  coverage:
    name: Check Coverage
    needs: [backend, frontend]
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          path: coverage-reports
  
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
  
      - name: Download JaCoCo CLI
        run: |
          wget https://repo1.maven.org/maven2/org/jacoco/org.jacoco.cli/0.8.7/org.jacoco.cli-0.8.7-nodeps.jar -O jacoco-cli.jar
  
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
  
      - name: Install coverage tool
        run: pip install coverage
  
      - name: List downloaded files
        run: find coverage-reports -type f
  
      - name: Process coverage
        run: |
          echo "Processing backend coverage:"
          python -c "
          import xml.etree.ElementTree as ET
          import csv
          
          tree = ET.parse('coverage-reports/backend-coverage/jacoco.xml')
          root = tree.getroot()
          
          with open('backend_coverage.csv', 'w', newline='') as f:
            writer = csv.writer(f)
            writer.writerow(['File', 'Line', 'Instruction Covered', 'Instruction Total'])
            for package in root.findall('.//package'):
              for sourcefile in package.findall('sourcefile'):
                filename = package.get('name') + '/' + sourcefile.get('name')
                for line in sourcefile.findall('line'):
                  writer.writerow([
                    filename,
                    line.get('nr'),
                    line.get('ci', '0'),
                    str(int(line.get('ci', '0')) + int(line.get('mi', '0')))
                  ])
          "
          
          echo "Processing frontend coverage:"
          coverage json -o frontend_coverage.json coverage-reports/frontend-coverage/coverage-final.json
          
          echo "Combining coverage:"
          coverage combine backend_coverage.csv frontend_coverage.json
          coverage report
          coverage xml
          coverage html
      
      - name: Check coverage threshold
        run: |
          TOTAL_COVERAGE=$(coverage report | grep TOTAL | awk '{print $NF}' | sed 's/%//')
          if (( $(echo "$TOTAL_COVERAGE < 80" | bc -l) )); then
            echo "Coverage is below 80%"
            exit 1
          fi
      
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov
        if: always()
      
      - name: Upload XML report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
        if: always()
